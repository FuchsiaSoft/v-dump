<Window x:Class="IWF.V_Dump.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:IWF.V_Dump"
        mc:Ignorable="d"
        Title="V-Dump" Height="600" Width="800"
        MinWidth="800" MinHeight="600"
        ResizeMode="CanResizeWithGrip"
        DataContext="{Binding Source={StaticResource Locator}, Path=Main}"
        RenderOptions.BitmapScalingMode="HighQuality"
        Name="windowMain" Closing="windowMain_Closing" Closed="windowMain_Closed">

    <Window.Resources>
        <Style TargetType="TextBlock" x:Key="Header1">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Light"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="SubHeader">
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="Foreground" Value="Gray"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="Header2">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="1"/>
        </Style>
        <Style TargetType="Button" x:Key="WideButton">
            <Setter Property="Width" Value="150"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
    </Window.Resources>
    
    <Grid>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="160"/>
            <RowDefinition/>
            <RowDefinition Height="100"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0" Background="WhiteSmoke">
            <Image Source="Resources/logo.png"
                   DockPanel.Dock="Left" Margin="10"/>
            <StackPanel Margin="30,10,10,10">
                <TextBlock Style="{StaticResource Header1}">
                    V-DUMP
                </TextBlock>
                <TextBlock Style="{StaticResource SubHeader}">
                    Frame extraction with perception hash based 
                    de-duplication and facial recognition
                </TextBlock>
            </StackPanel>
        </DockPanel>

        <StackPanel Grid.Row="1">
            <TextBlock Style="{StaticResource Header2}" Margin="5">
                Select video
            </TextBlock>
            <DockPanel Margin="10,0,10,0" IsEnabled="{Binding EnableControls}">
                <Label Width="80" DockPanel.Dock="Left" Content="File:"/>
                <Button DockPanel.Dock="Right" Margin="1" Content="Browse..." Width="100"
                        Command="{Binding BrowseFileCommand}"/>
                <TextBox Text="{Binding VideoFilePath}"/>
            </DockPanel>
            <DockPanel Margin="10,0,10,0" IsEnabled="{Binding EnableControls}">
                <Label Width="80" DockPanel.Dock="Left" Content="FPS:"/>
                <ComboBox Margin="1" ItemsSource="{Binding FrameRates}" SelectedItem="{Binding SelectedFrameRate}" Width="100" HorizontalAlignment="Left"/>
                <TextBlock VerticalAlignment="Center" Margin="5,0,0,0">
                    (Frames per second to extract, 2 to 4 is recommended)
                </TextBlock>
            </DockPanel>
            <StackPanel IsEnabled="{Binding EnableControls}" Orientation="Horizontal" HorizontalAlignment="Center" Margin="10,5,10,0">
                <Button Style="{StaticResource WideButton}"
                        Command="{Binding ExtractFramesCommand}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Path Stretch="Uniform" HorizontalAlignment="Left"
                              Fill="DarkGreen" Height="16"
                              Grid.Column="0"
                              Data="M18,14.5V11A1,1 0 0,0 17,10H16C18.24,8.39 18.76,5.27 17.15,3C15.54,0.78 12.42,0.26 10.17,1.87C9.5,2.35 8.96,3 8.6,3.73C6.25,2.28 3.17,3 1.72,5.37C0.28,7.72 1,10.8 3.36,12.25C3.57,12.37 3.78,12.5 4,12.58V21A1,1 0 0,0 5,22H17A1,1 0 0,0 18,21V17.5L22,21.5V10.5L18,14.5M13,4A2,2 0 0,1 15,6A2,2 0 0,1 13,8A2,2 0 0,1 11,6A2,2 0 0,1 13,4M6,6A2,2 0 0,1 8,8A2,2 0 0,1 6,10A2,2 0 0,1 4,8A2,2 0 0,1 6,6Z"/>
                        <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="Extract frames"/>
                    </Grid>
                </Button>
                <Button Style="{StaticResource WideButton}"
                        Command="{Binding CheckForDuplicatesCommand}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Path Stretch="Uniform" HorizontalAlignment="Left"
                              Fill="BlueViolet" Height="16"
                              Grid.Column="0"
                              Data="M21,17H7V3H21M21,1H7A2,2 0 0,0 5,3V17A2,2 0 0,0 7,19H21A2,2 0 0,0 23,17V3A2,2 0 0,0 21,1M3,5H1V21A2,2 0 0,0 3,23H19V21H3M15.96,10.29L13.21,13.83L11.25,11.47L8.5,15H19.5L15.96,10.29Z"/>
                        <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="Flag duplicates"/>
                    </Grid>
                </Button>
                <Button Style="{StaticResource WideButton}"
                        Command="{Binding RunFacialDetectionCommand}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Path Stretch="Uniform" HorizontalAlignment="Left"
                              Fill="DarkOrange" Height="16"
                              Grid.Column="0"
                              Data="M9,11.75A1.25,1.25 0 0,0 7.75,13A1.25,1.25 0 0,0 9,14.25A1.25,1.25 0 0,0 10.25,13A1.25,1.25 0 0,0 9,11.75M15,11.75A1.25,1.25 0 0,0 13.75,13A1.25,1.25 0 0,0 15,14.25A1.25,1.25 0 0,0 16.25,13A1.25,1.25 0 0,0 15,11.75M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20C7.59,20 4,16.41 4,12C4,11.71 4,11.42 4.05,11.14C6.41,10.09 8.28,8.16 9.26,5.77C11.07,8.33 14.05,10 17.42,10C18.2,10 18.95,9.91 19.67,9.74C19.88,10.45 20,11.21 20,12C20,16.41 16.41,20 12,20Z"/>
                        <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="Run facial detection"/>
                    </Grid>
                </Button>
            </StackPanel>

            <DockPanel Width="500" Visibility="{Binding IsBusy, Converter={StaticResource BoolToVis}}" >
                <TextBlock Width="220" DockPanel.Dock="Left" VerticalAlignment="Center" 
                           Margin="10" Text="{Binding BusyMessage}"/>
                <ProgressBar Margin="10" Height="20" IsIndeterminate="{Binding ProgressIndeterminate}"
                             Minimum="{Binding ProgressMin}" Maximum="{Binding ProgressMax}"
                             Value="{Binding ProgressValue}"/>
            </DockPanel>

            
            
        </StackPanel>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="7"/>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Background="LightGray" />
            <Label Margin="0" Padding="0" Grid.Column="1" Content="⁞" HorizontalAlignment="Center" Foreground="Gray" VerticalAlignment="Center" FontSize="14" FontWeight="Bold" IsHitTestVisible="False"/>

            <DockPanel Margin="10,0,10,0" RenderOptions.BitmapScalingMode="Fant">
                <WrapPanel DockPanel.Dock="Top">
                    <GroupBox Header="Duplicate filters" Margin="0,0,20,0">
                        <StackPanel>
                            <RadioButton Content="Show all" IsChecked="{Binding DupeShowAll}"/>
                            <RadioButton Content="Duplicates only" IsChecked="{Binding DupeShow}"/>
                            <RadioButton Content="Non-Duplicates only" IsChecked="{Binding DupeHide}"/>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Facial filters">
                        <StackPanel>
                            <RadioButton Content="Show all" IsChecked="{Binding FaceAll}"/>
                            <RadioButton Content="With faces only" IsChecked="{Binding FaceShow}"/>
                            <RadioButton Content="Without faces only" IsChecked="{Binding FaceHide}"/>
                        </StackPanel>
                    </GroupBox>
                </WrapPanel>
                <ListView ItemsSource="{Binding Frames}" 
                          SelectedItem="{Binding SelectedFrame}"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListView.InputBindings>
                        <KeyBinding Key="Delete" Command="{Binding DeleteCommand}"/>
                    </ListView.InputBindings>
                    
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>

                            <Style.Triggers>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsDuplicate}" Value="True"/>
                                        <Condition Binding="{Binding Path=DataContext.DupeHide, ElementName=windowMain}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsDuplicate}" Value="False"/>
                                        <Condition Binding="{Binding Path=DataContext.DupeShow, ElementName=windowMain}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding HasFace}" Value="True"/>
                                        <Condition Binding="{Binding Path=DataContext.FaceHide, ElementName=windowMain}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding HasFace}" Value="False"/>
                                        <Condition Binding="{Binding Path=DataContext.FaceShow, ElementName=windowMain}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>


                                <!--<DataTrigger Binding="{Binding Show}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>-->
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Image Height="25" Margin="1">
                                    <Image.Source>
                                        <BitmapImage CacheOption="OnLoad" UriSource="{Binding ThumbnailPath}"/>
                                    </Image.Source>
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsDuplicate}" Value="True">
                                                    <Setter Property="Opacity" Value="0.2"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsDuplicate}" Value="False">
                                                    <Setter Property="Opacity" Value="1"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <Canvas Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Canvas.Style>
                                        <Style TargetType="Canvas">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding HasFace}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding HasFace}" Value="False">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Canvas.Style>
                                    <Rectangle Width="12" Height="13"
                                             Fill="White">
                                        <Rectangle.Effect>
                                            <DropShadowEffect ShadowDepth="0" BlurRadius="3"
                                              Color="Black"/>
                                        </Rectangle.Effect>
                                    </Rectangle>
                                    <Path Stretch="Uniform" HorizontalAlignment="Left"
                                         Fill="DarkOliveGreen" Stroke="DarkOliveGreen" Height="10" Margin="1,1,0,0"
                                         Grid.Column="0"
                                         Data="M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z">
                                    </Path>
                                </Canvas>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </DockPanel>

            <DockPanel Grid.Column="2">
                <StackPanel DockPanel.Dock="Bottom" Margin="10">
                    <DockPanel>
                        <TextBlock Width="40" HorizontalAlignment="Left">MD5</TextBlock>
                        <TextBox Background="Transparent"
                                 BorderThickness="0"
                                 Text="{Binding SelectedFrame.MD5, Mode=OneWay}"
                                 IsReadOnly="True"
                                 TextWrapping="Wrap" />
                    </DockPanel>
                    <DockPanel>
                        <TextBlock Width="40" HorizontalAlignment="Left">SHA1</TextBlock>
                        <TextBox Background="Transparent"
                                 BorderThickness="0"
                                 Text="{Binding SelectedFrame.SHA1, Mode=OneWay}"
                                 IsReadOnly="True"
                                 TextWrapping="Wrap" />
                    </DockPanel>
                </StackPanel>
                <Image Margin="10" x:Name="imgMain" Source="{Binding ImageSource}">
                    <Image.BitmapEffect>
                        <DropShadowBitmapEffect
                            Direction="0" ShadowDepth="0"/>
                    </Image.BitmapEffect>
                </Image>
            </DockPanel>
            
        </Grid>

        <StackPanel Grid.Row="3">
            <TextBlock Margin="5" Style="{StaticResource Header2}">
                Export images
            </TextBlock>
            <DockPanel Margin="10,0,10,0" IsEnabled="{Binding EnableControls}">
                <Label Width="80" DockPanel.Dock="Left" Content="File:"/>
                <Button DockPanel.Dock="Right" Margin="1" Content="Browse..." Width="100"
                        Command="{Binding BrowseExportFileCommand}"/>
                <TextBox Text="{Binding ExportPath}"/>
            </DockPanel>
            <StackPanel Margin="90,5,10,0" IsEnabled="{Binding EnableControls}" Orientation="Horizontal">
                <CheckBox Content="Include CSV" Margin="0,0,20,0" IsChecked="{Binding ExportCSV}"/>
                <CheckBox Content="Include XML" Margin="0,0,20,0" IsChecked="{Binding ExportXml}"/>
                <CheckBox Content="Include JSON" Margin="0,0,20,0" IsChecked="{Binding ExportJson}"/>
                <Button Margin="1" Content="Export" Width="100"
                        Command="{Binding ExportCommand}"/>
            </StackPanel>
        </StackPanel>
        
        
    </Grid>
    
</Window>
